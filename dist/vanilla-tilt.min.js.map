{"version":3,"sources":["vanilla-tilt.js"],"names":["VanillaTilt","element","settings","arguments","length","undefined","_classCallCheck","this","Node","width","clientWidth","clientHeight","left","gammazero","lastgammazero","lastbetazero","height","update","bind","top","reset","betazero","extendSettings","reverse","transitionTimeout","isSettingTrue","glare","updateCall","event","updateBind","gyroscope","resetBind","gyroscopeSamples","glarePrerender","elementListener","prepareGlare","updateInitialPosition","_createClass","key","value","fullPageListening","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListener","cancelAnimationFrame","removeEventListeners","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","posX","angleX","clientX","angleY","clientY","posY","requestAnimationFrame","style","willChange","setTransition","transform","concat","perspective","glareElement","opacity","startX","startY","max","backupScale","scale","y","x","resetGlare","Math","min","tiltX","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","getBoundingClientRect","offsetHeight","rect","values","axis","getValues","detail","dispatchEvent","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","glareElementWrapper","Object","assign","position","overflow","pointer-events","background-image","transform-origin","updateGlareSize","glareSize","offsetWidth","innerWidth","documentElement","innerHeight","body","updateClientSize","_this","clearTimeout","speed","easing","transition","setTimeout","defaultSettings","full-page-listening","mouse-event-element","newSettings","property","hasAttribute","getAttribute","e","attribute","setting","elements","NodeList","slice","call","init","querySelectorAll"],"mappings":"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","file":"vanilla-tilt.min.js","sourcesContent":["var VanillaTilt = (function () {\r\n    'use strict';\r\n    \r\n    /**\r\n     * Created by Sergiu Șandor (micku7zu) on 1/27/2017.\r\n     * Original idea: https://github.com/gijsroge/tilt.js\r\n     * MIT License.\r\n     * Version 1.7.2\r\n     */\r\n    \r\n    class VanillaTilt {\r\n      constructor(element, settings = {}) {\r\n        if (!(element instanceof Node)) {\r\n          throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\r\n        }\r\n    \r\n        this.width = null;\r\n        this.height = null;\r\n        this.clientWidth = null;\r\n        this.clientHeight = null;\r\n        this.left = null;\r\n        this.top = null;\r\n    \r\n        // for Gyroscope sampling\r\n        this.gammazero = null;\r\n        this.betazero = null;\r\n        this.lastgammazero = null;\r\n        this.lastbetazero = null;\r\n    \r\n        this.transitionTimeout = null;\r\n        this.updateCall = null;\r\n        this.event = null;\r\n    \r\n        this.updateBind = this.update.bind(this);\r\n        this.resetBind = this.reset.bind(this);\r\n    \r\n        this.element = element;\r\n        this.settings = this.extendSettings(settings);\r\n    \r\n        this.reverse = this.settings.reverse ? -1 : 1;\r\n        this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\r\n        this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n        this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n        this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\r\n        this.gyroscopeSamples = this.settings.gyroscopeSamples;\r\n    \r\n        this.elementListener = this.getElementListener();\r\n    \r\n        if (this.glare) {\r\n          this.prepareGlare();\r\n        }\r\n    \r\n        if (this.fullPageListening) {\r\n          this.updateClientSize();\r\n        }\r\n    \r\n        this.addEventListeners();\r\n        this.reset();\r\n        this.updateInitialPosition();\r\n      }\r\n    \r\n      static isSettingTrue(setting) {\r\n        return setting === \"\" || setting === true || setting === 1;\r\n      }\r\n    \r\n      /**\r\n       * Method returns element what will be listen mouse events\r\n       * @return {Node}\r\n       */\r\n      getElementListener() {\r\n        if (this.fullPageListening) {\r\n          return window.document;\r\n        }\r\n    \r\n        if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n          const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n    \r\n          if (mouseEventElement) {\r\n            return mouseEventElement;\r\n          }\r\n        }\r\n    \r\n        if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n          return this.settings[\"mouse-event-element\"];\r\n        }\r\n    \r\n        return this.element;\r\n      }\r\n    \r\n      /**\r\n       * Method set listen methods for this.elementListener\r\n       * @return {Node}\r\n       */\r\n      addEventListeners() {\r\n        this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n        this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n        this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n        this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n        this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n    \r\n        this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n        this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    \r\n        if (this.glare || this.fullPageListening) {\r\n          window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n        }\r\n    \r\n        if (this.gyroscope) {\r\n          window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n        }\r\n      }\r\n    \r\n      /**\r\n       * Method remove event listeners from current this.elementListener\r\n       */\r\n      removeEventListeners() {\r\n        this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n        this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n        this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    \r\n        if (this.gyroscope) {\r\n          window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n        }\r\n    \r\n        if (this.glare || this.fullPageListening) {\r\n          window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n        }\r\n      }\r\n    \r\n      destroy() {\r\n        clearTimeout(this.transitionTimeout);\r\n        if (this.updateCall !== null) {\r\n          cancelAnimationFrame(this.updateCall);\r\n        }\r\n    \r\n        this.reset();\r\n    \r\n        this.removeEventListeners();\r\n        this.element.vanillaTilt = null;\r\n        delete this.element.vanillaTilt;\r\n    \r\n        this.element = null;\r\n      }\r\n    \r\n      onDeviceOrientation(event) {\r\n        if (event.gamma === null || event.beta === null) {\r\n          return;\r\n        }\r\n    \r\n        this.updateElementPosition();\r\n    \r\n        if (this.gyroscopeSamples > 0) {\r\n          this.lastgammazero = this.gammazero;\r\n          this.lastbetazero = this.betazero;\r\n    \r\n          if (this.gammazero === null) {\r\n            this.gammazero = event.gamma;\r\n            this.betazero = event.beta;\r\n          } else {\r\n            this.gammazero = (event.gamma + this.lastgammazero) / 2;\r\n            this.betazero = (event.beta + this.lastbetazero) / 2;\r\n          }\r\n    \r\n          this.gyroscopeSamples -= 1;\r\n        }\r\n    \r\n        const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n        const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n    \r\n        const degreesPerPixelX = totalAngleX / this.width;\r\n        const degreesPerPixelY = totalAngleY / this.height;\r\n    \r\n        const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\r\n        const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\r\n    \r\n        const posX = angleX / degreesPerPixelX;\r\n        const posY = angleY / degreesPerPixelY;\r\n    \r\n        if (this.updateCall !== null) {\r\n          cancelAnimationFrame(this.updateCall);\r\n        }\r\n    \r\n        this.event = {\r\n          clientX: posX + this.left,\r\n          clientY: posY + this.top,\r\n        };\r\n    \r\n        this.updateCall = requestAnimationFrame(this.updateBind);\r\n      }\r\n    \r\n      onMouseEnter() {\r\n        this.updateElementPosition();\r\n        this.element.style.willChange = \"transform\";\r\n        this.setTransition();\r\n      }\r\n    \r\n      onMouseMove(event) {\r\n        if (this.updateCall !== null) {\r\n          cancelAnimationFrame(this.updateCall);\r\n        }\r\n    \r\n        this.event = event;\r\n        this.updateCall = requestAnimationFrame(this.updateBind);\r\n      }\r\n    \r\n      onMouseLeave() {\r\n        this.setTransition();\r\n    \r\n        if (this.settings.reset) {\r\n          requestAnimationFrame(this.resetBind);\r\n        }\r\n      }\r\n    \r\n      reset() {\r\n        this.event = {\r\n          clientX: this.left + this.width / 2,\r\n          clientY: this.top + this.height / 2\r\n        };\r\n    \r\n        if (this.element && this.element.style) {\r\n          this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n            `rotateX(0deg) ` +\r\n            `rotateY(0deg) ` +\r\n            `scale3d(1, 1, 1)`;\r\n        }\r\n    \r\n        this.resetGlare();\r\n      }\r\n    \r\n      resetGlare() {\r\n        if (this.glare) {\r\n          this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n          this.glareElement.style.opacity = \"0\";\r\n        }\r\n      }\r\n    \r\n      updateInitialPosition() {\r\n        if (this.settings.startX === 0 && this.settings.startY === 0) {\r\n          return;\r\n        }\r\n    \r\n        this.onMouseEnter();\r\n    \r\n        if (this.fullPageListening) {\r\n          this.event = {\r\n            clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\r\n            clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\r\n          };\r\n        } else {\r\n          this.event = {\r\n            clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\r\n            clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\r\n          };\r\n        }\r\n    \r\n    \r\n        let backupScale = this.settings.scale;\r\n        this.settings.scale = 1;\r\n        this.update();\r\n        this.settings.scale = backupScale;\r\n        this.resetGlare();\r\n      }\r\n    \r\n      getValues() {\r\n        let x, y;\r\n    \r\n        if (this.fullPageListening) {\r\n          x = this.event.clientX / this.clientWidth;\r\n          y = this.event.clientY / this.clientHeight;\r\n        } else {\r\n          x = (this.event.clientX - this.left) / this.width;\r\n          y = (this.event.clientY - this.top) / this.height;\r\n        }\r\n    \r\n        x = Math.min(Math.max(x, 0), 1);\r\n        y = Math.min(Math.max(y, 0), 1);\r\n    \r\n        let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\r\n        let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\r\n        let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n    \r\n        return {\r\n          tiltX: tiltX,\r\n          tiltY: tiltY,\r\n          percentageX: x * 100,\r\n          percentageY: y * 100,\r\n          angle: angle\r\n        };\r\n      }\r\n    \r\n      updateElementPosition() {\r\n        let rect = this.element.getBoundingClientRect();\r\n    \r\n        this.width = this.element.offsetWidth;\r\n        this.height = this.element.offsetHeight;\r\n        this.left = rect.left;\r\n        this.top = rect.top;\r\n      }\r\n    \r\n      update() {\r\n        let values = this.getValues();\r\n    \r\n        this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\r\n          \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\r\n          \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\r\n          \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n    \r\n        if (this.glare) {\r\n          this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n          this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\r\n        }\r\n    \r\n        this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n          \"detail\": values\r\n        }));\r\n    \r\n        this.updateCall = null;\r\n      }\r\n    \r\n      /**\r\n       * Appends the glare element (if glarePrerender equals false)\r\n       * and sets the default style\r\n       */\r\n      prepareGlare() {\r\n        // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n        if (!this.glarePrerender) {\r\n          // Create glare element\r\n          const jsTiltGlare = document.createElement(\"div\");\r\n          jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n    \r\n          const jsTiltGlareInner = document.createElement(\"div\");\r\n          jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n    \r\n          jsTiltGlare.appendChild(jsTiltGlareInner);\r\n          this.element.appendChild(jsTiltGlare);\r\n        }\r\n    \r\n        this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n        this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n    \r\n        if (this.glarePrerender) {\r\n          return;\r\n        }\r\n    \r\n        Object.assign(this.glareElementWrapper.style, {\r\n          \"position\": \"absolute\",\r\n          \"top\": \"0\",\r\n          \"left\": \"0\",\r\n          \"width\": \"100%\",\r\n          \"height\": \"100%\",\r\n          \"overflow\": \"hidden\",\r\n          \"pointer-events\": \"none\"\r\n        });\r\n    \r\n        Object.assign(this.glareElement.style, {\r\n          \"position\": \"absolute\",\r\n          \"top\": \"50%\",\r\n          \"left\": \"50%\",\r\n          \"pointer-events\": \"none\",\r\n          \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n          \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n          \"transform-origin\": \"0% 0%\",\r\n          \"opacity\": \"0\",\r\n        });\r\n    \r\n        this.updateGlareSize();\r\n      }\r\n    \r\n      updateGlareSize() {\r\n        if (this.glare) {\r\n          const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\r\n    \r\n          Object.assign(this.glareElement.style, {\r\n            \"width\": `${glareSize}px`,\r\n            \"height\": `${glareSize}px`,\r\n          });\r\n        }\r\n      }\r\n    \r\n      updateClientSize() {\r\n        this.clientWidth = window.innerWidth\r\n          || document.documentElement.clientWidth\r\n          || document.body.clientWidth;\r\n    \r\n        this.clientHeight = window.innerHeight\r\n          || document.documentElement.clientHeight\r\n          || document.body.clientHeight;\r\n      }\r\n    \r\n      onWindowResize() {\r\n        this.updateGlareSize();\r\n        this.updateClientSize();\r\n      }\r\n    \r\n      setTransition() {\r\n        clearTimeout(this.transitionTimeout);\r\n        this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n        if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n    \r\n        this.transitionTimeout = setTimeout(() => {\r\n          this.element.style.transition = \"\";\r\n          if (this.glare) {\r\n            this.glareElement.style.transition = \"\";\r\n          }\r\n        }, this.settings.speed);\r\n    \r\n      }\r\n    \r\n      /**\r\n       * Method return patched settings of instance\r\n       * @param {boolean} settings.reverse - reverse the tilt direction\r\n       * @param {number} settings.max - max tilt rotation (degrees)\r\n       * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n       * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n       * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n       * @param {string} settings.easing - Easing on enter/exit\r\n       * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n       * @param {number} settings.speed - Speed of the enter/exit transition\r\n       * @param {boolean} settings.transition - Set a transition on enter/exit\r\n       * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\r\n       * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n       * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n       * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n       * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n       * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n       * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n       * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n       * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n       * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n       */\r\n      extendSettings(settings) {\r\n        let defaultSettings = {\r\n          reverse: false,\r\n          max: 15,\r\n          startX: 0,\r\n          startY: 0,\r\n          perspective: 1000,\r\n          easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n          scale: 1,\r\n          speed: 300,\r\n          transition: true,\r\n          axis: null,\r\n          glare: false,\r\n          \"max-glare\": 1,\r\n          \"glare-prerender\": false,\r\n          \"full-page-listening\": false,\r\n          \"mouse-event-element\": null,\r\n          reset: true,\r\n          gyroscope: true,\r\n          gyroscopeMinAngleX: -45,\r\n          gyroscopeMaxAngleX: 45,\r\n          gyroscopeMinAngleY: -45,\r\n          gyroscopeMaxAngleY: 45,\r\n          gyroscopeSamples: 10\r\n        };\r\n    \r\n        let newSettings = {};\r\n        for (var property in defaultSettings) {\r\n          if (property in settings) {\r\n            newSettings[property] = settings[property];\r\n          } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n            let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n            try {\r\n              newSettings[property] = JSON.parse(attribute);\r\n            } catch (e) {\r\n              newSettings[property] = attribute;\r\n            }\r\n    \r\n          } else {\r\n            newSettings[property] = defaultSettings[property];\r\n          }\r\n        }\r\n    \r\n        return newSettings;\r\n      }\r\n    \r\n      static init(elements, settings) {\r\n        if (elements instanceof Node) {\r\n          elements = [elements];\r\n        }\r\n    \r\n        if (elements instanceof NodeList) {\r\n          elements = [].slice.call(elements);\r\n        }\r\n    \r\n        if (!(elements instanceof Array)) {\r\n          return;\r\n        }\r\n    \r\n        elements.forEach((element) => {\r\n          if (!(\"vanillaTilt\" in element)) {\r\n            element.vanillaTilt = new VanillaTilt(element, settings);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    if (typeof document !== \"undefined\") {\r\n      /* expose the class to window */\r\n      window.VanillaTilt = VanillaTilt;\r\n    \r\n      /**\r\n       * Auto load\r\n       */\r\n      VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n    }\r\n    \r\n    return VanillaTilt;\r\n    \r\n    }());"]}